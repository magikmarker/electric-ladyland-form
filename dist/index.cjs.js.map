{
  "version": 3,
  "sources": ["../../../node_modules/object-assign/index.js", "../../../node_modules/react/cjs/react.production.min.js", "../../../node_modules/react/index.js", "../src/index.ts", "../src/action/logic/add-form-values-to-context.ts", "../src/action/logic/check-context-for-errors.ts", "../src/action/logic/handle-form-data.ts", "../src/action/logic/handle-list-item-form-structure-op.ts", "../src/action/logic/honeypot-field-has-value.ts", "../src/shared-logic.ts", "../src/action/logic/validate-form-field-value.ts", "../src/action/index.ts", "../src/loader/logic/check-for-relevant-context.ts", "../src/loader/logic/seed-context-with-initial-values.ts", "../src/loader/index.ts", "../src/form-wrapper.tsx", "../../../node_modules/history/index.js", "../../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js", "../../../node_modules/@remix-run/react/dist/esm/components.js", "../../../../packages/react-router/lib/context.ts", "../../../../packages/react-router/lib/router.ts", "../../../../packages/react-router/lib/hooks.tsx", "../../../../packages/react-router/lib/components.tsx", "../../../../packages/react-router-dom/index.tsx", "../../../node_modules/@remix-run/react/dist/esm/invariant.js", "../../../node_modules/@remix-run/react/dist/esm/routeModules.js", "../../../node_modules/@remix-run/react/dist/esm/links.js", "../../../node_modules/@remix-run/react/dist/esm/routeMatching.js", "../../../node_modules/@remix-run/react/dist/esm/index.js", "../src/components/hidden.tsx", "../src/components/shared/display.tsx", "../src/components/shared/logic.tsx", "../src/components/text-input.tsx", "../src/components/radio.tsx", "../src/components/checkbox-group.tsx", "../src/components/expandable-list.tsx", "../src/components/stateful-radio.tsx", "../src/form-field.tsx", "../src/validation.ts"],
  "sourcesContent": ["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "export { formActionFunction } from \"./action\";\nexport { formLoaderFunction } from \"./loader\";\nexport { ElectricLadylandForm } from \"./form-wrapper\";\nexport type { FormFieldInput, FormStage, FormBlueprint } from \"./types\";\nexport { validation, validationPatterns } from \"./validation\";\nexport { stringValidator } from \"./validation\";\n", "import type { FormFieldInput, FormBlueprint } from \"../../types\";\n\n// Take the form values from the request\n// form data and add them to context\nexport function addFormValuesToContext({\n  formBlueprint,\n  body,\n  context,\n}: {\n  context: any;\n  formBlueprint: FormBlueprint;\n  body: FormData;\n}): any {\n  // Get the inputs from the form\n  function addFieldToContext(field: FormFieldInput) {\n    // Get the form field value\n    let formFieldValue: string | undefined;\n\n    if (\n      field.type === \"email\" ||\n      field.type === \"password\" ||\n      field.type === \"text\" ||\n      field.type === \"textarea\" ||\n      field.type === \"radio\" ||\n      field.type === \"hidden\" ||\n      field.type === \"stateful-radio\"\n    ) {\n      formFieldValue =\n        body.get(`${field.name}`)?.toString() ?? field.initialValue;\n    }\n\n    if (field.type === \"checkbox\") {\n      let checkboxValue = body.get(`${field.name}`)?.toString();\n      // If there is no value, the checkbox was never checked, so\n      // we want to return early\n      // console.log({ checkboxValue });\n\n      if (!checkboxValue) {\n        return;\n      }\n      formFieldValue = checkboxValue;\n    }\n\n    let errors: string[] = [];\n    // If a field is required and not present, we need to add an error\n    // to the field\n    if (\n      field.type === \"text\" ||\n      field.type === \"textarea\" ||\n      field.type === \"email\" ||\n      field.type === \"password\"\n    ) {\n      if (!formFieldValue && field.required) {\n        errors.push(\"This field is required\");\n      }\n    }\n\n    if (typeof field === \"object\") {\n      // console.log({ formFieldValue, fieldName: field.name });\n\n      // Add the field to context\n      if (formFieldValue) {\n        context[`${field.name}`] = {\n          value: formFieldValue,\n          errors,\n        };\n      }\n    }\n\n    // If it is a stateful radio field, check for\n    // dependent children\n    if (field.type === \"stateful-radio\") {\n      // Get the index of the selected value\n      // We need this to know which children to show\n\n      field.dependentChildren.forEach((fields) => {\n        if (typeof fields !== \"undefined\") {\n          fields.forEach((nestedField) => {\n            if (nestedField) {\n              addFieldToContext(nestedField);\n            }\n          });\n        }\n      });\n    }\n\n    if (field.type === \"checkbox-group\") {\n      field.checkboxes.forEach((checkbox) => {\n        // Get rid of checkbox values that might\n        // exist from a previous pass\n        delete context[`${checkbox.name}`];\n        // console.log({ contextAfterDelete: context });\n\n        addFieldToContext(checkbox);\n        //        console.log(\"hi neighbors\");\n      });\n    }\n  }\n\n  // Use the form structure to create a context object\n\n  // Get the current form step to know what to add to context\n  const currentFormStep = context.currentStep;\n\n  // console.log({ currentFormStep, formBlueprint, context });\n\n  // console.log(\"lol: \", typeof formBlueprint[currentFormStep]);\n\n  for (const field of formBlueprint[currentFormStep]?.fields) {\n    if (field) {\n      addFieldToContext(field);\n    }\n  }\n\n  // console.log({ context });\n}\n", "// Check for errors in context\n\nimport type { FormFieldInput, FormBlueprint } from \"../../types\";\n\n// for the current step\nexport function checkContextForErrors({\n  context,\n  formBlueprint,\n}: {\n  formBlueprint: FormBlueprint;\n  context: any;\n}): boolean {\n  let errorsPresent = false;\n  // Basic form\n\n  const currentFormStep = context.currentStep;\n\n  // Using the current form step, get the context fields to\n  // check for errors\n  // eslint-disable-next-line no-inner-declarations\n  // We only care about the context values in the current step\n  let fieldsToValidate: string[] = [];\n\n  for (const field of formBlueprint[currentFormStep]?.fields) {\n    // console.log({ field });\n\n    if (context)\n      addFieldNameToValidateToArray(field, fieldsToValidate, context);\n  }\n\n  // console.log({ fieldsToValidate });\n\n  for (const fieldToValidate of fieldsToValidate) {\n    if (context[`${fieldToValidate}`]?.errors?.length >= 1) {\n      errorsPresent = true;\n    }\n\n    if (errorsPresent) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction addFieldNameToValidateToArray(\n  field: FormFieldInput,\n  fieldsToValidate: string[],\n  context: any\n) {\n  fieldsToValidate.push(field.name);\n\n  if (field.type === \"stateful-radio\") {\n    let selectedIndex = field.options.indexOf(context[`${field.name}`].value);\n    field.dependentChildren[selectedIndex].forEach((nestedField) => {\n      if (nestedField) {\n        fieldsToValidate.push(nestedField.name);\n      }\n    });\n  }\n}\n", "// Takes in the data (context), success redirect path, and\n\n// session and commitSession function\nexport async function handleFormData({\n  handleDataFn,\n  context,\n  successRedirectPath,\n  session,\n  request,\n  formUtilitiesFromRemixApp,\n}: {\n  handleDataFn: any;\n  context: any;\n  successRedirectPath: string;\n  session: any;\n  request: Request;\n  formUtilitiesFromRemixApp: {\n    redirect: any;\n    json: any;\n    commitSession: any;\n  };\n}) {\n  const { commitSession, redirect, json } = formUtilitiesFromRemixApp;\n  // handle data - the data function should return a tuple\n  // the first item in the tuple will be a boolean to indicate\n  // whether the operation succeeded or failed\n\n  // The second item in the tuple is the success or error message\n  let handleDataResult: [boolean, string] = await handleDataFn(\n    context,\n    request\n  );\n  let [success, message] = handleDataResult;\n\n  if (success) {\n      // clear the context values so that the form fields are empty if \n      // the user goes back to the same form\n    context = {};\n    context.dataHandlerSuccessMessage = message;\n    context.dataHandlerErrorMessage = \"\";\n    session.set(\"context\", context);\n\n    return redirect(successRedirectPath, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    context.dataHandlerSuccessMessage = \"\";\n    context.dataHandlerErrorMessage = message;\n    session.set(\"context\", context);\n\n    return json(\n      {},\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  }\n}\n", "export async function handleListItemFormStructureOp({\n  operationType,\n  formBlueprint,\n  context,\n  session,\n  pathname,\n  redirect,\n  body,\n  commitSession,\n}: {\n  operationType: any;\n  formBlueprint: any;\n  context: any;\n  session: any;\n  pathname: string;\n  redirect: any;\n  body: any;\n  commitSession: any;\n}): Promise<any> {\n  let expandableList = formBlueprint[context?.currentStep]?.fields.find(\n    (item: any) => {\n      return item.type === \"expandable-list\";\n    }\n  );\n  let expandableListArr = context?.[expandableList.name]?.value ?? [];\n\n  if (operationType === \"add-item-to-list\") {\n    let listItemObject: any = {};\n\n    expandableList.listItemStructure.forEach((field: any) => {\n      listItemObject[field.name] = {\n        value: body.get(field.name),\n        errors: [],\n      };\n    });\n\n    expandableListArr.push(listItemObject);\n  } else if (operationType === \"edit-list-item\") {\n    let indexToChange = body.get(\"index-to-change\");\n    expandableList.listItemStructure.forEach((field: any) => {\n      expandableListArr[Number(indexToChange)][field.name] = {\n        value: body.get(field.name),\n        errors: [],\n      };\n    });\n  } else if (operationType === \"delete-list-item\") {\n    let indexToDelete = body.get(\"index-to-delete\");\n\n    expandableListArr.splice(Number(indexToDelete), 1);\n  }\n  session.set(\"context\", {\n    ...context,\n    [expandableList.name]: {\n      value: expandableListArr,\n      errors: [],\n    },\n  });\n\n  return redirect(pathname, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n}\n", "// A bot entered a value into a hidden field\nexport function honeypotFieldHasValue({ body }: { body: FormData }) {\n  let honeypotField = body.get(\"given-name\");\n\n  // console.log({ honeypotField });\n\n  if (honeypotField) {\n    return true;\n  }\n\n  return false;\n}\n", "import type { FormBlueprint } from \"./types\";\n\nexport function getFormStage({\n  context,\n  formBlueprint,\n}: {\n  context: any;\n  formBlueprint: FormBlueprint;\n}): \"beginning\" | \"middle\" | \"end\" {\n  // What stage of the form are we in\n  // Beginning - Middle - End\n  // If formBlueprint length is 1, we are a single step form\n  // and we are in the end stage\n  if (formBlueprint.length === 1) {\n    return \"end\";\n  }\n  const numberOfAvailableSteps = formBlueprint.length;\n  let formStage: \"beginning\" | \"middle\" | \"end\" =\n    context.currentStep === 0\n      ? \"beginning\"\n      : Number(context.currentStep) + 1 === numberOfAvailableSteps\n      ? \"end\"\n      : \"middle\";\n\n  return formStage;\n}\n\nexport function toBinary(string: string) {\n  const codeUnits = new Uint16Array(string.length);\n  for (let i = 0; i < codeUnits.length; i++) {\n    codeUnits[i] = string.charCodeAt(i);\n  }\n  const charCodes = new Uint8Array(codeUnits.buffer);\n  let result = \"\";\n  for (let i = 0; i < charCodes.byteLength; i++) {\n    result += String.fromCharCode(charCodes[i]);\n  }\n  return result;\n}\n\nexport function fromBinary(binary: string) {\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  const charCodes = new Uint16Array(bytes.buffer);\n  let result = \"\";\n  for (let i = 0; i < charCodes.length; i++) {\n    result += String.fromCharCode(charCodes[i]);\n  }\n  return result;\n}\n\nexport function convertSingleQuotes(string: string) {\n  let stringLength = string.length;\n  let result = \"\";\n\n  for (let i = 0; i < stringLength; i++) {\n    // look for single quotes\n    let stringChar = string.charCodeAt(i);\n\n    // console.log({ stringChar });\n\n    if (stringChar === 8216 || stringChar === 8217) {\n      // console.log(\"We've got a runner\");\n\n      result += \"'\";\n    } else {\n      result += string[i];\n    }\n  }\n\n  // console.log({ result });\n\n  return result;\n}\n", "import { convertSingleQuotes } from \"../../shared-logic\";\nimport type { FormFieldInput } from \"../../types\";\n\n// Validate a form field value (context)\n// using the validation patterns outlined in formField\n// If an error exists, add it to the context\n\n// errors array\nexport function validateFormFieldValue({\n  formField,\n  context,\n}: {\n  context: any;\n  formField: FormFieldInput;\n}) {\n  // currentStep and formStage are context properties\n  // that we don't want to validate, they are also not\n  // objects\n\n  // if (typeof formField !== \"object\") {\n  //   console.log(\"I'm out..\");\n\n  //   return;\n  // }\n  if (formField.type === \"hidden\") {\n    return;\n  }\n\n  if (\n    formField.type === \"text\" ||\n    formField.type === \"textarea\" ||\n    formField.type === \"email\" ||\n    formField.type === \"password\"\n  ) {\n    let currentFieldValue = context[`${formField.name}`].value;\n    // Iterate through the validation patterns\n    formField.validation.patterns.forEach((pattern, index) => {\n      const valueIsValid = validateFieldValue({\n        value: currentFieldValue,\n        regex: pattern,\n      });\n\n      // console.log(\"valueIsValid: \", valueIsValid);\n\n      // Value is not valid\n      // Push current error message onto array if it isn't already there\n      if (\n        !valueIsValid &&\n        !context[`${formField.name}`].errors.includes(\n          formField.validation.messages[index]\n        )\n      ) {\n        // console.log(\"add an error\");\n\n        context[`${formField.name}`].errors.push(\n          formField.validation.messages[index]\n        );\n      }\n    });\n  }\n\n  if (formField.type === \"stateful-radio\") {\n    let currentFieldValue = context[`${formField.name}`].value;\n    let { dependentChildren } = formField;\n    // Get currently selected radio option\n    // Get the index of the current value\n    const selectedValueIndex: number =\n      formField.options.indexOf(currentFieldValue);\n\n    if (typeof dependentChildren === \"object\") {\n      dependentChildren[selectedValueIndex].forEach((dependentField) => {\n        if (typeof dependentField !== \"undefined\") {\n          validateFormFieldValue({ context, formField: dependentField });\n        }\n      });\n    }\n  }\n}\n\nfunction validateFieldValue({\n  value,\n  regex,\n}: {\n  value: string;\n  regex: string;\n}) {\n  let regexTestPattern = new RegExp(`${regex}`, \"igm\");\n\n  value = convertSingleQuotes(value);\n\n  // console.log({ regexTestPattern });\n\n  // console.log(\"regexTest: \", regexTestPattern.test(value));\n\n  // console.log({ value });\n\n  return regexTestPattern.test(value);\n}\n", "import {\n  addFormValuesToContext,\n  checkContextForErrors,\n  handleFormData,\n  handleListItemFormStructureOp,\n  honeypotFieldHasValue,\n  validateFormFieldValue,\n} from \"./logic\";\nimport type { FormBlueprint } from \"../types\";\nimport { getFormStage } from \"../shared-logic\";\n\nexport async function formActionFunction({\n  request,\n  formBlueprint,\n  handleDataFn,\n  successRedirectPath,\n  formUtilitiesFromRemixApp,\n}: {\n  request: Request;\n  formBlueprint: FormBlueprint;\n  handleDataFn: any;\n  successRedirectPath: string;\n  formUtilitiesFromRemixApp: {\n    commitSession: any;\n    getSession: any;\n    destroySession: any;\n    redirect: any;\n    json: any;\n  };\n}): Promise<any> {\n  // Get the form utilities by spreading the form utilities object\n  const { commitSession, getSession, destroySession, redirect } =\n    formUtilitiesFromRemixApp;\n\n  let basicOrMultipart: \"basic\" | \"multipart\" = \"basic\";\n  formBlueprint.length > 1\n    ? (basicOrMultipart = \"multipart\")\n    : (basicOrMultipart = \"basic\");\n\n  // Get the current session\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  //  console.log({ session });\n\n  let { pathname } = new URL(request.url);\n\n  let context: any = session.get(\"context\") ?? {};\n\n  //  console.log({ context });\n\n  // If there is no context, the session most likely timed out\n  // We only really care about the context if it is a multipart form\n  if (basicOrMultipart === \"multipart\" && Object.keys(context).length < 1) {\n    let { pathname } = new URL(request.url);\n    // console.log({ pathname });\n\n    console.log(\"No context found in session, redirecting to start\");\n    return redirect(pathname, {\n      headers: {\n        \"Set-Cookie\": await destroySession(session),\n      },\n    });\n  }\n\n  const body = await request.formData();\n\n  // Handle bots by checking for honeypot field\n  let honeypotFieldHit = honeypotFieldHasValue({ body });\n\n  if (honeypotFieldHit) {\n    return redirect(\"/\");\n  }\n\n  const operationType = body.get(\"operation-type\");\n\n  // *** ALERT ***\n  // operationType only exists for list item form structure\n  // Handle accordingly\n  if (operationType) {\n    return await handleListItemFormStructureOp({\n      operationType,\n      formBlueprint,\n      context,\n      session,\n      commitSession,\n      pathname,\n      body,\n      redirect,\n    });\n  }\n\n  let submitType: \"back\" | \"next\" | \"submit\" | string =\n    body.get(\"submit-type\")?.toString() ?? \"\";\n\n  // console.log({ submitType });\n\n  // Multipart - back button\n  if (basicOrMultipart === \"multipart\") {\n    if (submitType === \"back\") {\n      context.currentStep -= 1;\n\n      session.set(\"context\", context);\n\n      return redirect(pathname, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    }\n  }\n\n  // Add the form values to context\n  await addFormValuesToContext({\n    formBlueprint,\n    body,\n    context,\n  });\n\n  // Validate the form inputs using the validation\n  // methods from the form structure\n  if (!formBlueprint[context.currentStep].fields) {\n    throw new Error(\"No fields found in formBlueprint\");\n  }\n\n  formBlueprint[0].fields.forEach((formField) => {\n    validateFormFieldValue({ context, formField });\n  });\n\n  let sessionData: any = {};\n\n  for (const contextItem in context) {\n    // console.log({ contextItem: context[contextItem] });\n\n    sessionData[contextItem] = context[contextItem].value;\n  }\n\n  // console.log({ sessionData });\n\n  session.set(\"context\", context);\n\n  // Check for errors in context\n  // In basic, we want to check all of the context entries\n  // In multipart, we only want to check the context items\n  // for the current step\n  let errorsInContext = checkContextForErrors({\n    context,\n    formBlueprint,\n  });\n\n  // console.log({ errorsInContext, context });\n\n  if (!errorsInContext) {\n    // Get the current form stage, if it is only a single step form\n    // the formStage will be set to end to show a submit button\n    const formStage = getFormStage({ formBlueprint, context });\n    context.formStage = formStage;\n    // If there are no errors in the context we have two routes\n    // to take\n\n    // Basic Form\n    // Multipart Form\n\n    // BASIC FORM\n    if (basicOrMultipart === \"basic\") {\n      return handleFormData({\n        request,\n        handleDataFn,\n        context,\n        successRedirectPath,\n        formUtilitiesFromRemixApp,\n        session,\n      });\n    }\n\n    // MULTIPART FORM\n\n    // Get the current form stage\n    // This will determine a couple things\n    // * What buttons we need to render on the form\n    // (Next, Back, Submit)\n    // * If we are at the end, we want to handle the data,\n    // otherwise we want to show the next step of the form\n\n    // Handle data\n    if (formStage === \"end\" && submitType === \"submit\") {\n      // console.log(\"hey guys\");\n\n      return handleFormData({\n        handleDataFn,\n        context,\n        successRedirectPath,\n        formUtilitiesFromRemixApp,\n        session,\n        request,\n      });\n    } else {\n      // Still at the beginning or middle of the form\n      // All the inputs were correct, we want to go to\n      // the next stage of the form\n      context.currentStep += 1;\n      //      console.log({ currentStep: context.currentStep });\n\n      session.set(\"context\", context);\n\n      return redirect(pathname, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    }\n  }\n\n  return redirect(pathname, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n}\n", "import type { FormFieldInput, FormBlueprint } from \"../../types\";\n\n// Check to see that the context applies to the current\n// form structure. If it doesn't, return false\n\n// Perform different validation based on the field type\n// Outliers:\n// - Stateful Radio\n// - Checkbox Group\n\n// Does the context apply to the current form structure?\n// Yes - return the current context\n// No - return an empty context object\nfunction checkForRelevantContext({\n  formBlueprint,\n  context,\n}: {\n  formBlueprint: FormBlueprint;\n  context: any;\n}): any {\n  // No context exists\n  if (!context) {\n    return {};\n  }\n\n  let contextMismatch = false;\n\n  // Loop through the steps of the form structure and\n  // then loop through the fields of that step\n\n  // Each iteration of the loop will check the value of the\n  // contextMatches boolean. If contextMatches is false, we\n  // know we have a context mismatch and want to return an\n  // empty context object to re-initate the form\n\n  for (const step of formBlueprint) {\n    // @ts-ignore\n    for (const field of step?.fields) {\n      if (contextMismatch) {\n        //          console.log(\n        //          \"The context you passed in does not match the structure of the form. Setting context to an empty object so that we can start the form again\"\n        //      );\n\n        return {};\n      }\n\n      contextMismatch = checkContextForMismatch({ field, context });\n    }\n  }\n\n  return context;\n}\n\nfunction checkContextForMismatch({\n  field,\n  context,\n}: {\n  field: FormFieldInput;\n  context: any;\n}) {\n  // Checkbox groups should be ignored, because their value\n  // may or may not exist. A selected checkbox will show up\n  // in a form post, an unselected checkbox will not\n  if (field.type === \"checkbox-group\") {\n    return false;\n  }\n\n  let contextFieldName = context[`${field.name}`];\n\n  if (\n    typeof contextFieldName?.value !== \"string\" &&\n    typeof contextFieldName?.value !== \"object\"\n  ) {\n    //    console.log(\"bad value: \", contextFieldName.value);\n\n    return true;\n  }\n\n  // Stateful radios are also special in that in addition to\n  // their value, they can have nested children\n  if (field.type === \"stateful-radio\") {\n    field.dependentChildren.forEach((fields) => {\n      fields.forEach((nestedField) => {\n        if (nestedField) {\n          checkContextForMismatch({ field: nestedField, context });\n        }\n      });\n    });\n  }\n\n  return false;\n}\n\nexport { checkForRelevantContext };\n", "import type { FormFieldInput, FormBlueprint } from \"../../types\";\n\nfunction seedContextWithInitialValues({\n  formBlueprint,\n}: {\n  formBlueprint: FormBlueprint;\n}): any {\n  // Give the context object initial values\n  let context: any = {};\n\n  for (const step of formBlueprint) {\n    // console.log({ step });\n\n    // @ts-ignore\n    for (const field of step?.fields) {\n      // console.log({ field });\n\n      if (field) {\n        addFieldToContext({ field, context });\n      }\n    }\n  }\n\n  context.currentStep = 0;\n\n  return context;\n}\n\nfunction addFieldToContext({\n  field,\n  context,\n}: {\n  field: FormFieldInput;\n  context: any;\n}) {\n  if (field.type !== \"checkbox-group\" && field.type !== \"expandable-list\") {\n    context[`${field.name}`] = {\n      value: field.initialValue || \"\",\n      errors: [],\n    };\n  } else if (field.type === \"checkbox-group\") {\n    field.checkboxes.forEach((checkbox) => {\n      if (checkbox.initialValue) {\n        context[`${field.name}`] = {\n          // @ts-expect-error silly typescript\n          value: field.initialValue || \"\",\n          errors: [],\n        };\n      }\n    });\n  } else if (field.type === \"expandable-list\") {\n    context[`${field.name}`] = {\n      value: field.initialValue || [],\n      errors: [],\n    };\n  }\n\n  // console.log(\"adding field context: \", context);\n\n  if (field.type === \"stateful-radio\") {\n    field.dependentChildren.forEach((fields) => {\n      fields.forEach((nestedField) => {\n        if (typeof nestedField !== \"undefined\") {\n          addFieldToContext({ field: nestedField, context });\n        }\n      });\n    });\n  }\n}\n\nexport { seedContextWithInitialValues };\n", "import type { FormBlueprint } from \"../types\";\nimport { checkForRelevantContext, seedContextWithInitialValues } from \"./logic\";\n\nimport { getFormStage } from \"../shared-logic\";\nexport async function formLoaderFunction({\n  request,\n  formBlueprint,\n  formUtilitiesFromRemixApp,\n}: {\n  request: Request;\n  formBlueprint: FormBlueprint;\n  formUtilitiesFromRemixApp: {\n    commitSession: any;\n    getSession: any;\n    destroySession: any;\n    json: any;\n  };\n}): Promise<any> {\n  // Get the form utilities by spreading the form utilities object\n  const { commitSession, getSession, destroySession, json } =\n    formUtilitiesFromRemixApp;\n\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  let context = session.get(\"context\");\n\n  // Check to see if the current context matches the current\n  // form structure. If it doesn't match, there is a good chance\n  // that there is no context or we are coming from a different form\n  context = checkForRelevantContext({\n    formBlueprint,\n    context,\n  });\n\n  // If the context object doesn't have any length, we\n  // know that it is empty and we need to seed it\n  if (Object.keys(context).length < 1) {\n    context = seedContextWithInitialValues({\n      formBlueprint,\n    });\n  }\n\n  // Get the current step\n  context.currentStep = context?.currentStep ?? 0;\n\n  // We should never have a negative number\n  // for the current step\n  if (context.currentStep < 0) {\n    context.currentStep = 0;\n  }\n\n  let formStage = getFormStage({ context, formBlueprint });\n\n  // console.log({ formStage, context });\n\n  // This is mostly for multi-step forms, if we don't have any context\n  // values but we are past step one, we know we have some kind of mismatch\n  if (context.currentStep > 0 && Object.keys(context).length < 1) {\n    //      console.log(\"You shouldn't be here\");\n\n    return json(\n      {},\n      {\n        headers: {\n          \"Set-Cookie\": await destroySession(session),\n        },\n      }\n    );\n  }\n\n  context.formStage = formStage;\n  // @ts-ignore\n  context.nextButtonText = formBlueprint[context.currentStep]?.nextButtonText;\n  // @ts-ignore\n  context.backButtonText = formBlueprint[context.currentStep]?.backButtonText;\n\n  session.set(\"context\", context);\n\n  // console.log({ currentStep: context?.currentStep });\n  return {\n    context,\n    formStructure: formBlueprint[context.currentStep],\n    commitSession,\n    session,\n  };\n}\n", "import type { ReactNode } from \"react\";\nimport type { FormFieldInput, FormStage } from \"./types\";\n// @ts-expect-error sometimes you walk the line, sometimes it walks you\nimport React from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport { FormField } from \"./form-field\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\n\nexport function ElectricLadylandForm({\n  context,\n  formStructure,\n  action,\n  submitText = \"Submit\",\n  reloadDocument = false,\n}: {\n  context: any;\n  formStructure: FormStage;\n  action?: string;\n  submitText?: string;\n  reloadDocument?: boolean;\n}) {\n//  console.log({ formStructure });\n\n  return (\n    <div className=\"el-form-wrapper\">\n      <FormWrapper reloadDocument={reloadDocument} action={action}>\n        <HoneypotField />\n        {formStructure.fields.map((field: FormFieldInput) => {\n          return <FormField field={field} context={context} key={field.name} />;\n        })}\n        {context.dataHandlerErrorMessage && context.formStage === \"end\" ? (\n          <>\n            <div className=\"font-display text-lg font-semibold text-danger-5\">\n              {context.dataHandlerErrorMessage}\n            </div>\n            <span className=\"block h-6\"></span>\n          </>\n        ) : null}\n        <div className=\"forward-button-wrapper mt-10 flex w-full\">\n          {(context.formStage === \"beginning\" ||\n            context.formStage === \"middle\") && (\n            <FormButton\n              dataTest=\"next\"\n              className=\"el-form-button-forward\"\n              name=\"submit-type\"\n              type=\"submit\"\n              value=\"next\"\n            >\n              {context.nextButtonText}\n              <span className=\"el-form-right-icon\">\n                <FaChevronRight aria-hidden=\"true\" />\n              </span>\n            </FormButton>\n          )}\n          {context.formStage === \"end\" && (\n            <FormButton\n              dataTest=\"submit\"\n              className=\"el-form-button-forward\"\n              name=\"submit-type\"\n              type=\"submit\"\n              value=\"submit\"\n            >\n              {submitText}\n              <span className=\"el-form-right-icon\">\n                <FaChevronRight aria-hidden=\"true\" />\n              </span>\n            </FormButton>\n          )}\n        </div>\n      </FormWrapper>\n      {(context.formStage === \"middle\" || context.formStage === \"end\") &&\n      context.currentStep > 0 ? (\n        <Form method=\"post\">\n          <FormButton\n            dataTest=\"back\"\n            className=\"el-form-button-back\"\n            name=\"submit-type\"\n            type=\"submit\"\n            value=\"back\"\n          >\n            <span className=\"el-form-left-icon\">\n              <FaChevronLeft aria-hidden=\"true\" />\n            </span>\n            {context.backButtonText}\n          </FormButton>\n        </Form>\n      ) : null}\n    </div>\n  );\n}\n\nfunction FormWrapper({\n  children,\n  action,\n  reloadDocument = false,\n}: {\n  children: ReactNode;\n  action?: string;\n  reloadDocument?: boolean;\n}) {\n  if (reloadDocument) {\n    return (\n      <Form reloadDocument action={action} method=\"post\">\n        {children}\n      </Form>\n    );\n  }\n  return (\n    <Form action={action} method=\"post\">\n      {children}\n    </Form>\n  );\n}\n\nfunction HoneypotField() {\n  return (\n    <>\n      <input\n        className=\"visually-hidden\"\n        type=\"text\"\n        name=\"given-name\"\n        id=\"given-name\"\n      />\n      <label className=\"visually-hidden\" htmlFor=\"given-name\">\n        Given Name\n      </label>\n    </>\n  );\n}\n\nfunction FormButton({\n  children,\n  name,\n  className,\n  value,\n  type = \"submit\",\n  dataTest,\n}: {\n  children: ReactNode;\n  name?: string;\n  className?: string;\n  value?: string;\n  type?: \"submit\";\n  dataTest?: string;\n}) {\n  return (\n    <button\n      data-test={dataTest}\n      className={`el-form-button${className ? \" \" + className : \"\"}`}\n      name={name}\n      type={type}\n      value={value}\n    >\n      {children}\n    </button>\n  );\n}\n", "import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, useLocation, useResolvedPath, useNavigate, Router, useRoutes } from 'react-router-dom';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary, RemixCatchBoundary, RemixRootDefaultCatchBoundary } from './errorBoundaries.js';\nimport invariant from './invariant.js';\nimport { getLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getStylesheetPrefetchLinks } from './links.js';\nimport { createHtml } from './markup.js';\nimport { createClientRoutes } from './routes.js';\nimport { matchClientRoutes } from './routeMatching.js';\nimport { createTransitionManager } from './transition.js';\n\nconst RemixEntryContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction useRemixEntryContext() {\n  let context = React.useContext(RemixEntryContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\nfunction RemixEntry({\n  context: entryContext,\n  action,\n  location: historyLocation,\n  navigator: _navigator,\n  static: staticProp = false\n}) {\n  let {\n    manifest,\n    routeData: documentLoaderData,\n    actionData: documentActionData,\n    routeModules,\n    serverHandoffString,\n    appState: entryComponentDidCatchEmulator\n  } = entryContext;\n  let clientRoutes = React.useMemo(() => createClientRoutes(manifest.routes, routeModules, RemixRoute), [manifest, routeModules]);\n  let [clientState, setClientState] = React.useState(entryComponentDidCatchEmulator);\n  let [transitionManager] = React.useState(() => {\n    return createTransitionManager({\n      routes: clientRoutes,\n      actionData: documentActionData,\n      loaderData: documentLoaderData,\n      location: historyLocation,\n      catch: entryComponentDidCatchEmulator.catch,\n      catchBoundaryId: entryComponentDidCatchEmulator.catchBoundaryRouteId,\n      onRedirect: _navigator.replace,\n      onChange: state => {\n        setClientState({\n          catch: state.catch,\n          error: state.error,\n          catchBoundaryRouteId: state.catchBoundaryId,\n          loaderBoundaryRouteId: state.errorBoundaryId,\n          renderBoundaryRouteId: null,\n          trackBoundaries: false,\n          trackCatchBoundaries: false\n        });\n      }\n    });\n  }); // Ensures pushes interrupting pending navigations use replace\n  // TODO: Move this to React Router\n\n  let navigator = React.useMemo(() => {\n    let push = (to, state) => {\n      return transitionManager.getState().transition.state !== \"idle\" ? _navigator.replace(to, state) : _navigator.push(to, state);\n    };\n\n    return { ..._navigator,\n      push\n    };\n  }, [_navigator, transitionManager]);\n  let {\n    location,\n    matches,\n    loaderData,\n    actionData\n  } = transitionManager.getState(); // Send new location to the transition manager\n\n  React.useEffect(() => {\n    let {\n      location\n    } = transitionManager.getState();\n    if (historyLocation === location) return;\n    transitionManager.send({\n      type: \"navigation\",\n      location: historyLocation,\n      submission: consumeNextNavigationSubmission(),\n      action\n    });\n  }, [transitionManager, historyLocation, action]); // If we tried to render and failed, and the app threw before rendering any\n  // routes, get the error and pass it to the ErrorBoundary to emulate\n  // `componentDidCatch`\n\n  let ssrErrorBeforeRoutesRendered = clientState.error && clientState.renderBoundaryRouteId === null && clientState.loaderBoundaryRouteId === null ? deserializeError(clientState.error) : undefined;\n  let ssrCatchBeforeRoutesRendered = clientState.catch && clientState.catchBoundaryRouteId === null ? clientState.catch : undefined;\n  return /*#__PURE__*/React.createElement(RemixEntryContext.Provider, {\n    value: {\n      matches,\n      manifest,\n      appState: clientState,\n      routeModules,\n      serverHandoffString,\n      clientRoutes,\n      routeData: loaderData,\n      actionData,\n      transitionManager\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: location,\n    component: RemixRootDefaultErrorBoundary,\n    error: ssrErrorBeforeRoutesRendered\n  }, /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n    location: location,\n    component: RemixRootDefaultCatchBoundary,\n    catch: ssrCatchBeforeRoutesRendered\n  }, /*#__PURE__*/React.createElement(Router, {\n    navigationType: action,\n    location: location,\n    navigator: navigator,\n    static: staticProp\n  }, /*#__PURE__*/React.createElement(Routes, null)))));\n}\n\nfunction deserializeError(data) {\n  let error = new Error(data.message);\n  error.stack = data.stack;\n  return error;\n}\n\nfunction Routes() {\n  // TODO: Add `renderMatches` function to RR that we can use and then we don't\n  // need this component, we can just `renderMatches` from RemixEntry\n  let {\n    clientRoutes\n  } = useRemixEntryContext(); // fallback to the root if we don't have a match\n\n  let element = useRoutes(clientRoutes) || clientRoutes[0].element;\n  return element;\n} ////////////////////////////////////////////////////////////////////////////////\n// RemixRoute\n\n\nconst RemixRouteContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction useRemixRouteContext() {\n  let context = React.useContext(RemixRouteContext);\n  invariant(context, \"You must render this element in a remix route element\");\n  return context;\n}\n\nfunction DefaultRouteComponent({\n  id\n}) {\n  throw new Error(`Route \"${id}\" has no component! Please go add a \\`default\\` export in the route module file.\\n` + \"If you were trying to navigate or submit to a resource route, use `<a>` instead of `<Link>` or `<Form reloadDocument>`.\");\n}\n\nfunction RemixRoute({\n  id\n}) {\n  let location = useLocation();\n  let {\n    routeData,\n    routeModules,\n    appState\n  } = useRemixEntryContext(); // This checks prevent cryptic error messages such as: 'Cannot read properties of undefined (reading 'root')'\n\n  invariant(routeData, \"Cannot initialize 'routeData'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let data = routeData[id];\n  let {\n    default: Component,\n    CatchBoundary,\n    ErrorBoundary\n  } = routeModules[id];\n  let element = Component ? /*#__PURE__*/React.createElement(Component, null) : /*#__PURE__*/React.createElement(DefaultRouteComponent, {\n    id: id\n  });\n  let context = {\n    data,\n    id\n  };\n\n  if (CatchBoundary) {\n    // If we tried to render and failed, and this route threw the error, find it\n    // and pass it to the ErrorBoundary to emulate `componentDidCatch`\n    let maybeServerCaught = appState.catch && appState.catchBoundaryRouteId === id ? appState.catch : undefined; // This needs to run after we check for the error from a previous render,\n    // otherwise we will incorrectly render this boundary for a loader error\n    // deeper in the tree.\n\n    if (appState.trackCatchBoundaries) {\n      appState.catchBoundaryRouteId = id;\n    }\n\n    context = maybeServerCaught ? {\n      id,\n\n      get data() {\n        console.error(\"You cannot `useLoaderData` in a catch boundary.\");\n        return undefined;\n      }\n\n    } : {\n      id,\n      data\n    };\n    element = /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n      location: location,\n      component: CatchBoundary,\n      catch: maybeServerCaught\n    }, element);\n  } // Only wrap in error boundary if the route defined one, otherwise let the\n  // error bubble to the parent boundary. We could default to using error\n  // boundaries around every route, but now if the app doesn't want users\n  // seeing the default Remix ErrorBoundary component, they *must* define an\n  // error boundary for *every* route and that would be annoying. Might as\n  // well make it required at that point.\n  //\n  // By conditionally wrapping like this, we allow apps to define a top level\n  // ErrorBoundary component and be done with it. Then, if they want to, they\n  // can add more specific boundaries by exporting ErrorBoundary components\n  // for whichever routes they please.\n  //\n  // NOTE: this kind of logic will move into React Router\n\n\n  if (ErrorBoundary) {\n    // If we tried to render and failed, and this route threw the error, find it\n    // and pass it to the ErrorBoundary to emulate `componentDidCatch`\n    let maybeServerRenderError = appState.error && (appState.renderBoundaryRouteId === id || appState.loaderBoundaryRouteId === id) ? deserializeError(appState.error) : undefined; // This needs to run after we check for the error from a previous render,\n    // otherwise we will incorrectly render this boundary for a loader error\n    // deeper in the tree.\n\n    if (appState.trackBoundaries) {\n      appState.renderBoundaryRouteId = id;\n    }\n\n    context = maybeServerRenderError ? {\n      id,\n\n      get data() {\n        console.error(\"You cannot `useLoaderData` in an error boundary.\");\n        return undefined;\n      }\n\n    } : {\n      id,\n      data\n    };\n    element = /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n      location: location,\n      component: ErrorBoundary,\n      error: maybeServerRenderError\n    }, element);\n  } // It's important for the route context to be above the error boundary so that\n  // a call to `useLoaderData` doesn't accidentally get the parents route's data.\n\n\n  return /*#__PURE__*/React.createElement(RemixRouteContext.Provider, {\n    value: context\n  }, element);\n} ////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"none\": Never fetched\n */\n\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n  }, [prefetch]);\n\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\n/**\n * A special kind of `<Link>` that knows whether or not it is \"active\".\n *\n * @see https://remix.run/api/remix#navlink\n */\n\n\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/api/remix#link\n */\n\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\nfunction Links() {\n  let {\n    matches,\n    routeModules,\n    manifest\n  } = useRemixEntryContext();\n  let links = React.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, links.map(link => {\n    if (isPageLinkDescriptor(link)) {\n      return /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n        key: link.page\n      }, link));\n    }\n\n    let imageSrcSet = null; // In React 17, <link imageSrcSet> and <link imageSizes> will warn\n    // because the DOM attributes aren't recognized, so users need to pass\n    // them in all lowercase to forward the attributes to the node without a\n    // warning. Normalize so that either property can be used in Remix.\n\n    if (\"useId\" in React) {\n      if (link.imagesrcset) {\n        link.imageSrcSet = imageSrcSet = link.imagesrcset;\n        delete link.imagesrcset;\n      }\n\n      if (link.imagesizes) {\n        link.imageSizes = link.imagesizes;\n        delete link.imagesizes;\n      }\n    } else {\n      if (link.imageSrcSet) {\n        link.imagesrcset = imageSrcSet = link.imageSrcSet;\n        delete link.imageSrcSet;\n      }\n\n      if (link.imageSizes) {\n        link.imagesizes = link.imageSizes;\n        delete link.imageSizes;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"link\", _extends({\n      key: link.rel + (link.href || \"\") + (imageSrcSet || \"\")\n    }, link));\n  }));\n}\n/**\n * This component renders all of the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/api/remix#prefetchpagelinks-\n */\n\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    clientRoutes\n  } = useRemixEntryContext();\n  let matches = React.useMemo(() => matchClientRoutes(clientRoutes, page), [clientRoutes, page]);\n\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\n\nfunction usePrefetchedStylesheets(matches) {\n  let {\n    routeModules\n  } = useRemixEntryContext();\n  let [styleLinks, setStyleLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    getStylesheetPrefetchLinks(matches, routeModules).then(links => {\n      if (!interrupted) setStyleLinks(links);\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, routeModules]);\n  return styleLinks;\n}\n\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    matches,\n    manifest\n  } = useRemixEntryContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, location, \"data\"), [page, nextMatches, matches, location]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, location, \"assets\"), [page, nextMatches, matches, location]);\n  let dataHrefs = React.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]); // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n\n  let styleLinks = usePrefetchedStylesheets(newMatchesForAssets);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href: href\n  }, linkProps))), moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), styleLinks.map(link =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: link.href\n  }, link))));\n}\n/**\n * Renders the `<title>` and `<meta>` tags for the current routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n\nfunction Meta() {\n  let {\n    matches,\n    routeData,\n    routeModules\n  } = useRemixEntryContext();\n  let location = useLocation();\n  let meta = {};\n  let parentsData = {};\n\n  for (let match of matches) {\n    let routeId = match.route.id;\n    let data = routeData[routeId];\n    let params = match.params;\n    let routeModule = routeModules[routeId];\n\n    if (routeModule.meta) {\n      let routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        parentsData,\n        params,\n        location\n      }) : routeModule.meta;\n      Object.assign(meta, routeMeta);\n    }\n\n    parentsData[routeId] = data;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.entries(meta).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n\n    if ([\"charset\", \"charSet\"].includes(name)) {\n      return /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charset\",\n        charSet: value\n      });\n    }\n\n    if (name === \"title\") {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, value);\n    } // Open Graph tags use the `property` attribute, while other meta tags\n    // use `name`. See https://ogp.me/\n\n\n    let isOpenGraphTag = name.startsWith(\"og:\");\n    return [value].flat().map(content => {\n      if (isOpenGraphTag) {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          content: content,\n          key: name + content,\n          property: name\n        });\n      }\n\n      if (typeof content === \"string\") {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          content: content,\n          name: name,\n          key: name + content\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"meta\", _extends({\n        key: name + JSON.stringify(content)\n      }, content));\n    });\n  }));\n}\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\n\nlet isHydrated = false;\n\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    matches,\n    pendingLocation,\n    clientRoutes,\n    serverHandoffString\n  } = useRemixEntryContext();\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React.useMemo(() => {\n    let contextScript = serverHandoffString ? `window.__remixContext = ${serverHandoffString};` : \"\";\n    let routeModulesScript = `${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript)\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      src: manifest.url\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\"\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      src: manifest.entry.module,\n      type: \"module\"\n    }))); // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []); // avoid waterfall when importing the next route module\n\n  let nextMatches = React.useMemo(() => {\n    if (pendingLocation) {\n      // FIXME: can probably use transitionManager `nextMatches`\n      let matches = matchClientRoutes(clientRoutes, pendingLocation);\n      invariant(matches, `No routes match path \"${pendingLocation.pathname}\"`);\n      return matches;\n    }\n\n    return [];\n  }, [pendingLocation, clientRoutes]);\n  let routePreloads = matches.concat(nextMatches).map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = manifest.entry.imports.concat(routePreloads);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), isHydrated ? null : initialScripts);\n}\n\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n/**\n * A Remix-aware `<form>`. It behaves like a normal form except that the\n * interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n *\n * @see https://remix.run/api/remix#form\n */\nlet Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nForm.displayName = \"Form\";\nlet FormImpl = /*#__PURE__*/React.forwardRef(({\n  reloadDocument = false,\n  replace = false,\n  method = \"get\",\n  action = \".\",\n  encType = \"application/x-www-form-urlencoded\",\n  fetchKey,\n  onSubmit,\n  ...props\n}, forwardedRef) => {\n  let submit = useSubmitImpl(fetchKey);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action);\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    encType: encType,\n    onSubmit: reloadDocument ? undefined : event => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      submit(submitter || event.currentTarget, {\n        method,\n        replace\n      });\n    }\n  }, props));\n});\nFormImpl.displayName = \"FormImpl\";\n\n/**\n * Resolves a `<form action>` path relative to the current route.\n *\n * @see https://remix.run/api/remix#useformaction\n */\nfunction useFormAction(action = \".\", // TODO: Remove method param in v2 as it's no longer needed and is a breaking change\nmethod = \"get\") {\n  let {\n    id\n  } = useRemixRouteContext();\n  let path = useResolvedPath(action);\n  let search = path.search;\n  let isIndexRoute = id.endsWith(\"/index\");\n\n  if (action === \".\" && isIndexRoute) {\n    search = search ? search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return path.pathname + search;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n *\n * @see https://remix.run/api/remix#usesubmit\n */\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nlet defaultMethod = \"get\";\nlet defaultEncType = \"application/x-www-form-urlencoded\";\nfunction useSubmitImpl(key) {\n  let navigate = useNavigate();\n  let defaultAction = useFormAction();\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  return React.useCallback((target, options = {}) => {\n    let method;\n    let action;\n    let encType;\n    let formData;\n\n    if (isFormElement(target)) {\n      let submissionTrigger = options.submissionTrigger;\n      method = options.method || target.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(target);\n\n      if (submissionTrigger && submissionTrigger.name) {\n        formData.append(submissionTrigger.name, submissionTrigger.value);\n      }\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      let form = target.form;\n\n      if (form == null) {\n        throw new Error(`Cannot submit a <button> without a <form>`);\n      } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n      method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(form); // Include name + value from a <button>\n\n      if (target.name) {\n        formData.set(target.name, target.value);\n      }\n    } else {\n      if (isHtmlElement(target)) {\n        throw new Error(`Cannot submit element that is not <form>, <button>, or ` + `<input type=\"submit|image\">`);\n      }\n\n      method = options.method || \"get\";\n      action = options.action || defaultAction;\n      encType = options.encType || \"application/x-www-form-urlencoded\";\n\n      if (target instanceof FormData) {\n        formData = target;\n      } else {\n        formData = new FormData();\n\n        if (target instanceof URLSearchParams) {\n          for (let [name, value] of target) {\n            formData.append(name, value);\n          }\n        } else if (target != null) {\n          for (let name of Object.keys(target)) {\n            formData.append(name, target[name]);\n          }\n        }\n      }\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      protocol,\n      host\n    } = window.location;\n    let url = new URL(action, `${protocol}//${host}`);\n\n    if (method.toLowerCase() === \"get\") {\n      for (let [name, value] of formData) {\n        if (typeof value === \"string\") {\n          url.searchParams.append(name, value);\n        } else {\n          throw new Error(`Cannot submit binary form data using GET`);\n        }\n      }\n    }\n\n    let submission = {\n      formData,\n      action: url.pathname + url.search,\n      method: method.toUpperCase(),\n      encType,\n      key: Math.random().toString(36).substr(2, 8)\n    };\n\n    if (key) {\n      transitionManager.send({\n        type: \"fetcher\",\n        href: submission.action,\n        submission,\n        key\n      });\n    } else {\n      setNextNavigationSubmission(submission);\n      navigate(url.pathname + url.search, {\n        replace: options.replace\n      });\n    }\n  }, [defaultAction, key, navigate, transitionManager]);\n}\nlet nextNavigationSubmission;\n\nfunction setNextNavigationSubmission(submission) {\n  nextNavigationSubmission = submission;\n}\n\nfunction consumeNextNavigationSubmission() {\n  let submission = nextNavigationSubmission;\n  nextNavigationSubmission = undefined;\n  return submission;\n}\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes, which automatically happens on the next `<Link>` click when Remix\n * detects a new version of the app is available on the server.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n *\n * @see https://remix.run/api/remix#usebeforeunload\n */\n\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n/**\n * Returns the current route matches on the page. This is useful for creating\n * layout abstractions with your current routes.\n *\n * @see https://remix.run/api/remix#usematches\n */\nfunction useMatches() {\n  let {\n    matches,\n    routeData,\n    routeModules\n  } = useRemixEntryContext();\n  return React.useMemo(() => matches.map(match => {\n    var _routeModules$match$r;\n\n    let {\n      pathname,\n      params\n    } = match;\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: routeData[match.route.id],\n      // if the module fails to load or an error/response is thrown, the module\n      // won't be defined.\n      handle: (_routeModules$match$r = routeModules[match.route.id]) === null || _routeModules$match$r === void 0 ? void 0 : _routeModules$match$r.handle\n    };\n  }), [matches, routeData, routeModules]);\n}\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/api/remix#useloaderdata\n */\n\nfunction useLoaderData() {\n  return useRemixRouteContext().data;\n}\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/api/remix#useactiondata\n */\n\nfunction useActionData() {\n  let {\n    id: routeId\n  } = useRemixRouteContext();\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let {\n    actionData\n  } = transitionManager.getState();\n  return actionData ? actionData[routeId] : undefined;\n}\n/**\n * Returns everything you need to know about a page transition to build pending\n * navigation indicators and optimistic UI on data mutations.\n *\n * @see https://remix.run/api/remix#usetransition\n */\n\nfunction useTransition() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  return transitionManager.getState().transition;\n}\n\nfunction createFetcherForm(fetchKey) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    // TODO: make ANOTHER form w/o a fetchKey prop\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetchKey: fetchKey\n    }));\n  });\n  FetcherForm.displayName = \"fetcher.Form\";\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/api/remix#usefetcher\n */\nfunction useFetcher() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let [key] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => createFetcherForm(key));\n  let [load] = React.useState(() => href => {\n    transitionManager.send({\n      type: \"fetcher\",\n      href,\n      key\n    });\n  });\n  let submit = useSubmitImpl(key);\n  let fetcher = transitionManager.getFetcher(key);\n  let fetcherWithComponents = React.useMemo(() => ({\n    Form,\n    submit,\n    load,\n    ...fetcher\n  }), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => transitionManager.deleteFetcher(key);\n  }, [transitionManager, key]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n *\n * @see https://remix.run/api/remix#usefetchers\n */\n\nfunction useFetchers() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let {\n    fetchers\n  } = transitionManager.getState();\n  return [...fetchers.values()];\n} // Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\n// If running an un-bundled server outside of `remix dev` you will still need\n// to set the REMIX_DEV_SERVER_WS_PORT manually.\n\nconst LiveReload = process.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  port = Number(process.env.REMIX_DEV_SERVER_WS_PORT || 8002),\n  nonce = undefined\n}) {\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                (() => {\n                  let protocol = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n                  let host = location.hostname;\n                  let socketPath = protocol + \"//\" + host + \":\" + ${String(port)} + \"/socket\";\n\n                  let ws = new WebSocket(socketPath);\n                  ws.onmessage = (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"\uD83D\uDCBF Reloading window ...\");\n                      window.location.reload();\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                })();\n              `\n    }\n  });\n};\n\nexport { Form, FormImpl, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixEntry, RemixEntryContext, RemixRoute, Scripts, composeEventHandlers, useActionData, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLoaderData, useMatches, useSubmit, useSubmitImpl, useTransition };\n", "import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n", "import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n", "import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n", "import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// TODO: We eventually might not want to import anything directly from `history`\n// and leverage `react-router` here instead\n// TODO: import/export from react-router-dom\n\n/**\n * A React component that is rendered when the server throws a Response.\n *\n * @see https://remix.run/api/conventions#catchboundary\n */\n\n/**\n * A React component that is rendered when there is an error on a route.\n *\n * @see https://remix.run/api/conventions#errorboundary\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n/**\n * A function that returns an object of name + content pairs to use for\n * `<meta>` tags for a route. These tags will be merged with (and take\n * precedence over) tags from parent routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n/**\n * A name/content pair used to render `<meta>` tags in a meta function for a\n * route. The value can be either a string, which will render a single `<meta>`\n * tag, or an array of strings that will render multiple tags with the same\n * `name` attribute.\n */\n\n/**\n * During client side transitions Remix will optimize reloading of routes that\n * are currently on the page by avoiding loading routes that aren't changing.\n * However, in some cases, like form submissions or search params Remix doesn't\n * know which routes need to be reloaded so it reloads them all to be safe.\n *\n * This function lets apps further optimize by returning `false` when Remix is\n * about to reload the route. A common case is a root loader with nothing but\n * environment variables: after form submissions the root probably doesn't need\n * to be reloaded.\n *\n * @see https://remix.run/api/conventions#unstable_shouldreload\n */\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/api/conventions#handle\n */\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n\n  try {\n    let routeModule = await import(route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // User got caught in the middle of a deploy and the CDN no longer has the\n    // asset we're trying to import! Reload from the server and the user\n    // (should) get the new manifest--unless the developer purged the static\n    // assets, the manifest path, but not the documents \uD83D\uDE2C\n    window.location.reload();\n    return new Promise(() => {// check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\nexport { loadRouteModule };\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'history';\nimport { loadRouteModule } from './routeModules.js';\n\n// TODO: We eventually might not want to import anything directly from `history`\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n\n    let module = routeModules[match.route.id];\n    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];\n  }).flat(1);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupe(descriptors, preloads);\n}\nasync function prefetchStyleLinks(routeModule) {\n  if (!routeModule.links) return;\n  let descriptors = routeModule.links();\n  if (!descriptors) return;\n  let styleLinks = [];\n\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({ ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  } // don't block for non-matching media queries\n\n\n  let matchingLinks = styleLinks.filter(link => !link.media || window.matchMedia(link.media).matches);\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\n\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n\n    document.head.appendChild(link);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) return false; // <link> may not have an href if <link rel=\"preload\"> is used with imagesrcset + imagesizes\n  // https://github.com/remix-run/remix/issues/184\n  // https://html.spec.whatwg.org/commit-snapshots/cb4f5ff75de5f4cbd7013c4abad02f21c77d4d1c/#attr-link-imagesrcset\n\n  if (object.href == null) {\n    return object.rel === \"preload\" && (typeof object.imageSrcSet === \"string\" || typeof object.imagesrcset === \"string\") && (typeof object.imageSizes === \"string\" || typeof object.imagesizes === \"string\");\n  }\n\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getStylesheetPrefetchLinks(matches, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(match.route, routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"preload\" ? { ...link,\n    rel: \"prefetch\"\n  } : { ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  });\n} // This is ridiculously identical to transition.ts `filterMatchesToLoad`\n\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, location, mode) {\n  let path = parsePathPatch(page);\n\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n\n    return (// param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  }; // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n\n\n  let newMatches = mode === \"data\" && location.search !== path.search ? // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    if (!match.route.hasLoader) {\n      return false;\n    }\n\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n\n    if (match.route.shouldReload) {\n      return match.route.shouldReload({\n        params: match.params,\n        prevUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        url: new URL(page, window.origin)\n      });\n    }\n\n    return true;\n  }) : nextMatches.filter((match, index) => {\n    return (mode === \"assets\" || match.route.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n\n    return hrefs;\n  }).flat(1));\n} // The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\n\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n\n    return hrefs;\n  }).flat(1));\n}\n\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\n\nfunction dedupe(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n\n    let str = JSON.stringify(descriptor);\n\n    if (!set.has(str)) {\n      set.add(str);\n      deduped.push(descriptor);\n    }\n\n    return deduped;\n  }, []);\n} // https://github.com/remix-run/history/issues/897\n\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\nexport { dedupe, getDataLinkHrefs, getLinksForMatches, getModuleLinkHrefs, getNewMatchesForLinks, getStylesheetPrefetchLinks, isHtmlLinkDescriptor, isPageLinkDescriptor, prefetchStyleLinks };\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { matchRoutes } from 'react-router-dom';\n\n// TODO: We eventually might not want to import anything directly from `history`\nfunction matchClientRoutes(routes, location) {\n  let matches = matchRoutes(routes, location);\n  if (!matches) return null;\n  return matches.map(match => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\nexport { matchClientRoutes };\n", "/**\n * @remix-run/react v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nexport { RemixBrowser } from './browser.js';\nexport { Outlet, useHref, useLocation, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useSearchParams } from 'react-router-dom';\nexport { Form, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, Scripts, useActionData, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLoaderData, useMatches, useSubmit, useTransition } from './components.js';\nexport { useCatch } from './errorBoundaries.js';\nexport { ScrollRestoration } from './scroll-restoration.js';\nexport { RemixServer } from './server.js';\n", "// Create a component that renders a hidden input\nexport function HiddenField({\n  fieldContext,\n  fieldBlueprint,\n}: {\n  fieldContext: {\n    value?: string;\n  };\n  fieldBlueprint: {\n    initialValue?: string;\n    name: string;\n  };\n}) {\n  let initialValue = fieldBlueprint.initialValue ?? \"\";\n  let value = fieldContext?.value ?? initialValue;\n  return <input type=\"hidden\" name={fieldBlueprint.name} value={value} />;\n}\n", "import type { ReactNode } from \"react\";\nimport type {\n  CheckboxGroupBlueprint,\n  ExpandableListBlueprint,\n  RadioFieldBlueprint,\n  StatefulRadioFieldBlueprint,\n  TextFieldBlueprint,\n} from \"../../types\";\n\nexport function FieldLabel({\n  className,\n  children,\n}: {\n  className?: string;\n  children: ReactNode;\n}) {\n  return (\n    <>\n      <span\n        className={`el-form-field-label${className ? \" \" + className : \"\"}`}\n      >\n        {children}\n      </span>\n    </>\n  );\n}\n\nexport function FieldDescription({ children }: { children: ReactNode }) {\n  if (children) {\n    return <p className=\"el-form-field-description\">{children}</p>;\n  }\n\n  return null;\n}\n\nexport function displayFieldErrors({\n  fieldErrors,\n  fieldVisited,\n}: {\n  fieldErrors: string[];\n  fieldVisited: boolean;\n}) {\n  return (\n    <>\n      {fieldErrors.length >= 1 && fieldVisited\n        ? fieldErrors.map((fieldError) => {\n            //            console.log({ fieldError });\n\n            if (fieldErrors.length === 1) {\n              return (\n                <div className=\"el-field-error-text\" key={fieldError}>\n                  {fieldError}\n                </div>\n              );\n            } else {\n              return (\n                <div className=\"el-field-error-text\" key={fieldError}>\n                  - {fieldError}\n                </div>\n              );\n            }\n          })\n        : null}\n    </>\n  );\n}\n\nexport function displayFieldLabelDescriptionError({\n  fieldBlueprint,\n  fieldErrors,\n  fieldVisited,\n}: {\n  fieldBlueprint:\n    | TextFieldBlueprint\n    | RadioFieldBlueprint\n    | StatefulRadioFieldBlueprint\n    | CheckboxGroupBlueprint\n    | ExpandableListBlueprint;\n  fieldErrors?: string[];\n  fieldVisited?: boolean;\n}) {\n  // fieldErrors = [\"Something Very Bad Happened\", \"Another Bad Thing\"];\n  // fieldVisited = true;\n  // console.log({fieldErrorsInsideDisplayFieldLabelDescriptionError: fieldErrors});\n  return (\n    <>\n      <label htmlFor={fieldBlueprint.name} key={fieldBlueprint.name}>\n        <FieldLabel>{fieldBlueprint.label}</FieldLabel>\n      </label>\n\n      <FieldDescription>{fieldBlueprint.description}</FieldDescription>\n\n      {fieldErrors && fieldVisited\n        ? displayFieldErrors({ fieldErrors, fieldVisited })\n        : null}\n    </>\n  );\n}\n\nexport function RadioOrCheckboxWrapper({\n  className,\n  children,\n}: {\n  className?: string;\n  children: ReactNode;\n}) {\n  // console.log({ className });\n\n  return (\n    <>\n      <div\n        className={`el-radio-or-checkbox-wrapper${\n          className ? \" \" + className : \"\"\n        }`}\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport function RadioOrCheckboxLabel({\n  className,\n  children,\n  htmlFor,\n}: {\n  className?: string;\n  children: ReactNode;\n  htmlFor: string;\n}) {\n  return (\n    <label\n      htmlFor={htmlFor}\n      className={`el-radio-or-checkbox-label${\n        className ? \" \" + className : \"\"\n      }`}\n    >\n      {children}\n    </label>\n  );\n}\n", "import type { FormEvent } from \"react\";\nimport { useState } from \"react\";\nimport { convertSingleQuotes } from \"../../shared-logic\";\n\nexport function createFieldLabel(fieldName: string) {\n  let words = fieldName.split(\"-\");\n\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].slice(1);\n  }\n\n  return words.join(\" \");\n}\n\nexport function onChange({\n  e,\n  fieldValidation,\n  setFieldErrors,\n  fieldErrors,\n}: {\n  e: FormEvent<HTMLInputElement> | FormEvent<HTMLTextAreaElement>;\n  setFieldErrors: any;\n  fieldErrors: string[];\n  fieldValidation: { patterns: string[]; messages: string[] };\n}) {\n   //  console.log(\"hello from onChange\");\n    console.log({ validation: fieldValidation, fieldErrors });\n    let fieldIsValid = true;\n  fieldValidation.patterns.forEach(async (pattern, index) => {\n    let regexTestPattern = new RegExp(pattern, \"gim\");\n \n    let value = convertSingleQuotes(e?.currentTarget?.value);\n// console.log({ value });\n    let currentFieldIsValid = regexTestPattern.test(value);\n    if (!currentFieldIsValid) fieldIsValid = false;\n    if (currentFieldIsValid) {\n        // remove the current error message if it exists\n        let indexOfError = fieldErrors.indexOf(fieldValidation.messages[index]);\n        // console.log({currentFieldMessage: fieldValidation.messages[index]});\n        // console.log(\"indexOfError\", indexOfError);\n        if (indexOfError > -1) {\n            fieldErrors.splice(indexOfError, 1);\n        }\n    } else if (!fieldErrors.includes(fieldValidation.messages[index])) {\n      // console.log(\"not valid\");\n\n      // Only display the error message once\n      setFieldErrors([...fieldErrors, fieldValidation.messages[index]]);\n    }\n  });\n  if (fieldIsValid) {\n    setFieldErrors([]);\n  }\n}\n\nexport function useFormField({\n  fieldBlueprint,\n  fieldContext,\n}: {\n  fieldBlueprint: {\n    name: string;\n    type: string;\n    initialValue?: string;\n  };\n  fieldContext: {\n    value?: string;\n    errors: string[];\n  };\n}) {\n  // Determine if the field has errors or has been visited\n  let errors: string[] = [];\n  let visited = false;\n\n  if (\n    fieldBlueprint.type === \"email\" ||\n    fieldBlueprint.type === \"password\" ||\n    fieldBlueprint.type === \"text\" ||\n    fieldBlueprint.type === \"textarea\"\n  ) {\n    if (fieldContext?.errors) {\n      errors = fieldContext?.errors;\n\n      if (fieldContext?.errors.length >= 1) visited = true;\n    }\n  }\n\n  let [fieldErrors, setFieldErrors] = useState(errors);\n  let [fieldVisited, setFieldVisited] = useState(visited);\n\n  // Check to see whether a value for the field exists in the context\n  // If it does, set the value to the context value\n  // If it doesn't, set the value to the initial value\n  let initialValue = fieldBlueprint.initialValue ?? \"\";\n  let defaultValue = fieldContext?.value ?? initialValue;\n\n  return {\n    fieldErrors,\n    fieldVisited,\n    setFieldErrors,\n    setFieldVisited,\n    defaultValue,\n  };\n}\n", "import { displayFieldLabelDescriptionError } from \"./shared/display\";\nimport type { TextFieldBlueprint } from \"../types\";\nimport { onChange, useFormField } from \"./shared/logic\";\n\nexport function TextInput({\n  fieldBlueprint,\n  fieldContext,\n  className,\n}: {\n  fieldContext: { value?: string; errors: string[] };\n  fieldBlueprint: TextFieldBlueprint;\n  className?: string;\n}) {\n  let {\n    defaultValue,\n    fieldErrors,\n    setFieldErrors,\n    fieldVisited,\n    setFieldVisited,\n  } = useFormField({ fieldBlueprint, fieldContext });\n  //  console.log({ validation: fieldBlueprint.validation});\n  //  console.log({ fieldErrors, fieldVisited });\n  return (\n    <>\n      {displayFieldLabelDescriptionError({\n        fieldBlueprint,\n        fieldErrors,\n        fieldVisited,\n      })}\n      {fieldBlueprint.type === \"text\" ||\n      fieldBlueprint.type === \"password\" ||\n      fieldBlueprint.type === \"email\" ? (\n        <input\n          data-test={fieldBlueprint.name}\n          name={fieldBlueprint.name}\n          id={fieldBlueprint.name}\n          className={`el-text-input${className ? \" \" + className : \"\"}`}\n          required={fieldBlueprint.required}\n          defaultValue={defaultValue}\n          placeholder={fieldBlueprint.placeholder}\n          onBlur={() => setFieldVisited(true)}\n          onChange={(event) => {\n            onChange({\n              e: event,\n              setFieldErrors,\n              fieldErrors,\n              fieldValidation: fieldBlueprint.validation,\n            });\n          }}\n          pattern={fieldBlueprint.validation.browserPattern}\n          title={fieldBlueprint.validation.browserMessage}\n          type={fieldBlueprint.type}\n          autoCorrect=\"false\"\n          autoComplete=\"false\"\n        />\n      ) : fieldBlueprint.type === \"textarea\" ? (\n        <textarea\n          name={fieldBlueprint.name}\n          id={fieldBlueprint.name}\n          data-test={fieldBlueprint.name}\n          className=\"el-text-input\"\n          required={fieldBlueprint.required}\n          rows={5}\n          defaultValue={defaultValue}\n          placeholder={fieldBlueprint.placeholder}\n          onBlur={() => setFieldVisited(true)}\n          onChange={(event) => {\n            onChange({\n              e: event,\n              setFieldErrors,\n              fieldErrors,\n              fieldValidation: fieldBlueprint.validation,\n            });\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n", "import type { RadioFieldBlueprint } from \"../types\";\nimport {\n  displayFieldLabelDescriptionError,\n  RadioOrCheckboxLabel,\n  RadioOrCheckboxWrapper,\n} from \"./shared/display\";\nimport { createFieldLabel } from \"./shared/logic\";\n\nexport function Radio({\n  fieldBlueprint,\n  fieldContext,\n}: {\n  fieldContext: { value?: string; errors: string[] };\n  fieldBlueprint: RadioFieldBlueprint;\n  className?: string;\n}) {\n  return (\n    <>\n      {displayFieldLabelDescriptionError({\n        fieldBlueprint,\n      })}\n\n      {fieldBlueprint.options.map((radioValue) => {\n        //        console.log({ radioValue });\n\n        let defaultRadioValue = fieldBlueprint.initialValue;\n\n        if (fieldContext?.value) {\n          defaultRadioValue = fieldContext.value;\n        }\n\n        const label = createFieldLabel(radioValue);\n        return (\n          <RadioOrCheckboxWrapper key={`${fieldBlueprint.name}-${radioValue}`}>\n            <input\n              data-test={`${fieldBlueprint.name}-${radioValue}`}\n              key={radioValue}\n              type=\"radio\"\n              id={`${fieldBlueprint.name}-${radioValue}`}\n              name={fieldBlueprint.name}\n              value={radioValue}\n              autoComplete=\"off\"\n              defaultChecked={radioValue === defaultRadioValue}\n            />\n            <RadioOrCheckboxLabel\n              className=\"ml-2\n              \"\n              htmlFor={`${fieldBlueprint.name}-${radioValue}`}\n            >\n              {label}\n            </RadioOrCheckboxLabel>\n          </RadioOrCheckboxWrapper>\n        );\n      })}\n    </>\n  );\n}\n", "import type { CheckboxGroupBlueprint } from \"../types\";\nimport {\n  displayFieldLabelDescriptionError,\n  RadioOrCheckboxLabel,\n  RadioOrCheckboxWrapper,\n} from \"./shared/display\";\n\n// Because we are dealing with checkboxes, we want all of the\n// context items.\n\n// To determine if a checkbox is checked, we need to look\n// at the context to see if the field exists there. If it does,\n// we know that the checkbox is checked.\nexport function CheckboxGroup({\n  fieldBlueprint,\n  context,\n}: {\n  context: any;\n  fieldBlueprint: CheckboxGroupBlueprint;\n  className?: string;\n}) {\n  return (\n    <>\n      {displayFieldLabelDescriptionError({\n        fieldBlueprint,\n      })}\n\n      {fieldBlueprint.checkboxes.map((checkbox) => {\n        return (\n          <RadioOrCheckboxWrapper key={checkbox.name}>\n            <input\n              data-test={`${checkbox.name}-${checkbox.value}`}\n              key={checkbox.name}\n              type=\"checkbox\"\n              id={checkbox.name}\n              name={checkbox.name}\n              value={checkbox.value}\n              autoComplete=\"off\"\n              defaultChecked={context?.[checkbox.name]}\n            />\n            <RadioOrCheckboxLabel\n              className=\"ml-2\n              \"\n              htmlFor={checkbox.name}\n            >\n              {checkbox.label}\n            </RadioOrCheckboxLabel>\n          </RadioOrCheckboxWrapper>\n        );\n      })}\n    </>\n  );\n}\n", "import type { ExpandableListBlueprint } from \"../types\";\nimport { Form, useSubmit } from \"@remix-run/react\";\nimport { useState, useEffect } from \"react\";\n\nimport { DialogOverlay, DialogContent } from \"@reach/dialog\";\nimport { FiPlusCircle } from \"react-icons/fi\";\nimport { FormField } from \"../form-field\";\nimport { displayFieldLabelDescriptionError } from \"./shared/display\";\nimport { IoClose } from \"react-icons/io5\";\n\nexport function ExpandableList({\n  fieldBlueprint,\n  fieldContext,\n}: {\n  fieldBlueprint: ExpandableListBlueprint;\n  fieldContext: {\n    value: string[];\n    errors: string[];\n  };\n}) {\n  const submit = useSubmit();\n  const [showDialog, setShowDialog] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(undefined);\n  const [selectedAction, setSelectedAction] = useState(\"\");\n  const [listItems, setListItems] = useState<any[] | []>([]);\n  const open = () => setShowDialog(true);\n  const close = () => setShowDialog(false);\n\n  useEffect(() => {\n    //   console.log(\"context changed\");\n\n    setListItems(fieldContext?.value);\n    //    console.log({ listItems });\n  }, [fieldContext, listItems]);\n\n  let { listItemStructure } = fieldBlueprint;\n\n  let fieldsToShowInTable = {};\n  listItemStructure.forEach((field) => {\n    // @ts-expect-error lolz typescript\n    if (field.showOnMobileTable) {\n      fieldsToShowInTable[field.name] = field;\n    }\n  });\n\n  return (\n    <div className=\"el-field-item\">\n      {displayFieldLabelDescriptionError({\n        fieldBlueprint,\n      })}\n\n      <button\n        className=\"expand-click-target el-form-button el-form-add-item-button\"\n        onClick={(e) => {\n          e.preventDefault();\n          setSelectedIndex(undefined);\n          setSelectedAction(\"\");\n          open();\n        }}\n      >\n        <span className=\"el-form-left-icon\">\n          <FiPlusCircle />\n        </span>\n        {fieldBlueprint.addItemLabel}\n      </button>\n\n      {listItems.length > 0 && (\n        <>\n          <div className=\"list-items-table-wrapper\">\n            <table>\n              <thead>\n                <tr className=\"lit-row\">\n                  {listItemStructure.map((nestedField) => {\n                    if (\n                      Object.keys(fieldsToShowInTable).includes(\n                        nestedField.name\n                      )\n                    ) {\n                      return (\n                        <th\n                          className=\"lit-cell\"\n                          data-flex={\n                            // @ts-expect-error lolz typescript\n                            nestedField.tableFlex\n                          }\n                          data-align-text={\n                            // @ts-expect-error lolz typescript\n                            nestedField.alignText\n                          }\n                          key={nestedField.name}\n                        >\n                          {nestedField.label}\n                        </th>\n                      );\n                    } else {\n                      return null;\n                    }\n                  })}\n                  <th className=\"lit-cell\" data-flex={3}>\n                    &nbsp;\n                  </th>\n                  <th className=\"lit-cell\" data-flex={3}>\n                    &nbsp;\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {listItems.map((item: any, index: number) => {\n                  // console.log({ item });\n                  return (\n                    <tr className=\"lit-row\" key={index}>\n                      {Object.keys(fieldsToShowInTable).map(\n                        (fieldToShow, index) => {\n                          //                         console.log({ index });\n\n                          let cellFlexValue;\n\n                          let alignTextValue;\n\n                          listItemStructure.forEach((itemStructure: any) => {\n                            if (itemStructure.name === fieldToShow) {\n                              cellFlexValue = itemStructure.tableFlex;\n                              alignTextValue = itemStructure.alignText;\n                            }\n                          });\n\n                          // flexValueArray.filter((item) => {\n                          //   if (item !== undefined && typeof item === \"number\") {\n                          //     return item;\n                          //   }\n                          // });\n\n                          //                        console.log({ cellFlexValue });\n\n                          return (\n                            <th\n                              className=\"lit-cell\"\n                              data-flex={cellFlexValue}\n                              data-align-text={alignTextValue}\n                              key={`${item[fieldToShow]}-${index}`}\n                            >\n                              {item[fieldToShow]?.value}\n                            </th>\n                          );\n                        }\n                      )}\n                      <th\n                        className=\"lit-cell\"\n                        data-align-text=\"right\"\n                        data-flex={3}\n                      >\n                        <button\n                          className=\"edit-item-button expand-click-target\"\n                          data-test={`edit-${index}`}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            setSelectedIndex(index);\n                            setSelectedAction(\"edit-item\");\n\n                            open();\n                          }}\n                        >\n                          Edit\n                        </button>\n                      </th>\n                      <th\n                        className=\"lit-cell\"\n                        data-align-text=\"right\"\n                        data-flex={3}\n                      >\n                        <button\n                          className=\"delete-item-button expand-click-target\"\n                          data-test={`delete-${index}`}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            setSelectedIndex(index);\n                            setSelectedAction(\"delete-item\");\n\n                            open();\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n      <DialogOverlay isOpen={showDialog} onDismiss={close}>\n        <DialogContent aria-label={fieldBlueprint.addOrEditItemModalLabel}>\n          <div className=\"modal-content-wrapper\">\n            <button\n              className=\"close-modal-button expand-click-target\"\n              onClick={close}\n            >\n              <span className=\"close-icon-wrapper\">\n                <IoClose role=\"img\" />\n              </span>\n              <span className=\"visually-hidden\">Close Modal</span>\n            </button>\n            {selectedAction === \"delete-item\" ? (\n              <>\n                <div className=\"modal-label modal-delete-item-label\">\n                  Delete Item\n                </div>\n                <span className=\"block h-3\"></span>\n                <p className=\"confirm-delete-text\">\n                  Are you sure you want to delete item{\" \"}\n                  {listItems.map((index: number) => {\n                    if (index === selectedIndex) {\n                      //                      console.log({ item: item[Object.keys(item)[0]] });\n                      return listItems[selectedIndex][\n                        Object.keys(listItems[selectedIndex])[0]\n                      ]?.value;\n                    } else {\n                      return null;\n                    }\n                  })}\n                  ?\n                </p>\n                <span className=\"block h-6\"></span>\n                <div className=\"flex items-center\">\n                  <button\n                    className=\"el-form-button el-form-button-neutral expand-click-target\"\n                    data-test=\"cancel\"\n                    onClick={() => {\n                      close();\n                    }}\n                  >\n                    Cancel\n                  </button>\n                  <Form\n                    method=\"post\"\n                    onSubmitCapture={(event) => {\n                      submit(event.currentTarget);\n                      close();\n                    }}\n                  >\n                    <input\n                      type=\"hidden\"\n                      name=\"operation-type\"\n                      value=\"delete-list-item\"\n                    />\n                    <input\n                      type=\"hidden\"\n                      name=\"index-to-delete\"\n                      value={selectedIndex}\n                    />\n                    <button\n                      className=\"el-form-button el-form-button-danger expand-click-target\"\n                      data-test=\"confirm-delete\"\n                      type=\"submit\"\n                    >\n                      Confirm Delete\n                    </button>\n                  </Form>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"modal-label modal-add-item-label\">\n                  {typeof selectedIndex === \"number\"\n                    ? fieldBlueprint.editItemLabel\n                    : fieldBlueprint.addItemLabel}\n                </div>\n                <span className=\"block h-8\"></span>\n                <Form\n                  reloadDocument\n                  method=\"post\"\n                  onSubmitCapture={(event) => {\n                    submit(event.currentTarget);\n                    close();\n                  }}\n                >\n                  {selectedAction === \"edit-item\" ? (\n                    <>\n                      <input\n                        type=\"hidden\"\n                        name=\"operation-type\"\n                        value=\"edit-list-item\"\n                      />\n                      <input\n                        type=\"hidden\"\n                        name=\"index-to-change\"\n                        value={selectedIndex}\n                      />\n                    </>\n                  ) : (\n                    <input\n                      type=\"hidden\"\n                      name=\"operation-type\"\n                      value=\"add-item-to-list\"\n                    />\n                  )}\n                  {listItemStructure.map((nestedField) => {\n                    return (\n                      <FormField\n                        context={\n                          typeof selectedIndex === \"number\"\n                            ? fieldContext?.value[selectedIndex]\n                            : fieldContext\n                        }\n                        key={nestedField.name}\n                        field={nestedField}\n                      />\n                    );\n                  })}\n                  <span className=\"block h-4\"></span>\n                  <button\n                    className=\"el-form-button el-form-add-item-button expand-click-target\"\n                    type=\"submit\"\n                  >\n                    Confirm\n                  </button>\n                </Form>\n              </>\n            )}\n          </div>\n        </DialogContent>\n      </DialogOverlay>\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { FormField } from \"../form-field\";\nimport type { StatefulRadioFieldBlueprint } from \"../types\";\nimport {\n  displayFieldLabelDescriptionError,\n  RadioOrCheckboxLabel,\n  RadioOrCheckboxWrapper,\n} from \"./shared/display\";\nimport { createFieldLabel } from \"./shared/logic\";\n\nexport function StatefulRadio({\n  fieldBlueprint,\n  context,\n}: {\n  fieldBlueprint: StatefulRadioFieldBlueprint;\n  context: any;\n}) {\n  let selectedIndex = 0;\n  fieldBlueprint.options.forEach((option, index) => {\n    let defaultValue =\n      context[fieldBlueprint.name]?.value ?? fieldBlueprint.initialValue;\n    if (defaultValue === option) {\n      selectedIndex = index;\n    }\n  });\n\n  //   console.log({ context });\n\n  const [selectedValue, setSelectedValue] = useState(selectedIndex);\n\n  return (\n    <>\n      {displayFieldLabelDescriptionError({\n        fieldBlueprint,\n      })}\n      <div className=\"el-field-item\">\n        {fieldBlueprint.options.map((radioValue, index) => {\n          const label = createFieldLabel(radioValue);\n\n          if (index === selectedValue) {\n            return (\n              <RadioOrCheckboxWrapper key={radioValue}>\n                <input\n                  data-test={`${fieldBlueprint.name}-${radioValue}`}\n                  type=\"radio\"\n                  id={`${fieldBlueprint.name}-${radioValue}`}\n                  name={fieldBlueprint.name}\n                  value={radioValue}\n                  onChange={() => {\n                    setSelectedValue(index);\n                  }}\n                  checked={true}\n                  autoComplete=\"off\"\n                />\n                <RadioOrCheckboxLabel\n                  htmlFor={`${fieldBlueprint.name}-${radioValue}`}\n                >\n                  {label}\n                </RadioOrCheckboxLabel>\n              </RadioOrCheckboxWrapper>\n            );\n          } else {\n            return (\n              <RadioOrCheckboxWrapper key={radioValue}>\n                <input\n                  data-test={`${fieldBlueprint.name}-${radioValue}`}\n                  type=\"radio\"\n                  id={`${fieldBlueprint.name}-${radioValue}`}\n                  name={fieldBlueprint.name}\n                  value={radioValue}\n                  onChange={() => {\n                    setSelectedValue(index);\n                  }}\n                  autoComplete=\"off\"\n                />\n                <RadioOrCheckboxLabel\n                  htmlFor={`${fieldBlueprint.name}-${radioValue}`}\n                >\n                  {label}\n                </RadioOrCheckboxLabel>\n              </RadioOrCheckboxWrapper>\n            );\n          }\n        })}\n      </div>\n      {fieldBlueprint.dependentChildren[selectedValue].map((nestedField) => {\n        if (nestedField) {\n          return (\n            <FormField\n              context={context}\n              key={nestedField.name}\n              field={nestedField}\n            />\n          );\n        }\n        return null;\n      })}\n    </>\n  );\n}\n", "import type { FormFieldInput } from \"./types\";\nimport { HiddenField } from \"./components/hidden\";\nimport { TextInput } from \"./components/text-input\";\nimport { Radio } from \"./components/radio\";\nimport { CheckboxGroup } from \"./components/checkbox-group\";\nimport { ExpandableList } from \"./components/expandable-list\";\nimport { StatefulRadio } from \"./components/stateful-radio\";\n\nfunction FormField({\n  field,\n  context,\n}: {\n  field: FormFieldInput;\n  context: any;\n}) {\n  if (field.type === \"hidden\") {\n    return (\n      <HiddenField fieldContext={context[field.name]} fieldBlueprint={field} />\n    );\n  }\n\n  if (\n    field.type === \"text\" ||\n    field.type === \"textarea\" ||\n    field.type === \"password\" ||\n    field.type === \"email\"\n  ) {\n    return (\n      <div className=\"el-field-item\">\n        <TextInput fieldBlueprint={field} fieldContext={context[field.name]} />\n      </div>\n    );\n  }\n\n  if (field.type === \"radio\") {\n    return (\n      <div className=\"el-field-item\">\n        <Radio fieldBlueprint={field} fieldContext={context[field.name]} />\n      </div>\n    );\n  }\n\n  if (field.type === \"checkbox-group\") {\n    return (\n      <div className=\"el-field-item\">\n        <CheckboxGroup fieldBlueprint={field} context={context} />\n      </div>\n    );\n  }\n\n  if (field.type === \"expandable-list\") {\n    return (\n      <div className=\"el-field-item\">\n        <ExpandableList\n          fieldBlueprint={field}\n          fieldContext={context[field.name]}\n        />\n      </div>\n    );\n  }\n\n  if (field.type === \"stateful-radio\") {\n    return (\n      <div className=\"el-field-item\">\n        <StatefulRadio fieldBlueprint={field} context={context} />\n      </div>\n    );\n  }\n  return null;\n}\n\nexport { FormField };\n", "export const validationPatterns = {\n  phoneNumber: \"^\\\\(?([0-9]{3})\\\\)?[-.\\\\s]?([0-9]{3})[-.\\\\s]?([0-9]{4})$\",\n  email: \"^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$\",\n  postalCode: \"^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\\\s?[0-9][A-Z][0-9]$\",\n  password: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,}).*$\",\n};\n\nconst validationStringPatterns = {\n  letters: \"A-Za-z\",\n  numbers: \"0-9\",\n  spaces: \"\\\\s\",\n  dotsAndCommas: \"\\\\.\\\\,\",\n  punctuation: '\"!@#$%^&*()_+-=|;:,./<>?',\n  minLength5: \"^.{5,}$\",\n};\n\nexport const validation = {\n  phone: {\n    browserPattern: validationPatterns.phoneNumber,\n    browserMessage: \"valid phone number with area code\",\n    patterns: [validationPatterns.phoneNumber],\n    messages: [\"Provide a valid phone number with area code\"],\n  },\n  email: {\n    browserPattern: validationPatterns.email,\n    browserMessage: \"valid email address\",\n    patterns: [validationPatterns.email],\n    messages: [\"Please provide a valid email address\"],\n  },\n  postalCode: {\n    browserPattern: validationPatterns.postalCode,\n    browserMessage: \"valid postal code\",\n    patterns: [validationPatterns.postalCode],\n    messages: [\"Please provide valid postal code\"],\n  },\n  password: {\n    browserPattern: validationPatterns.password,\n    browserMessage: \"letters, numbers, and special characters\",\n    patterns: [validationPatterns.password],\n    messages: [\"Letters, numbers, and special characters are required\"],\n  },\n  sentences: {\n    browserPattern: `^[${validationStringPatterns.letters}${validationStringPatterns.spaces}${validationStringPatterns.numbers}${validationStringPatterns.punctuation}]+$`,\n    browserMessage: \"letters, numbers, and special characters\",\n    patterns: [\n      `^[${validationStringPatterns.letters}${validationStringPatterns.spaces}${validationStringPatterns.numbers}${validationStringPatterns.punctuation}]{1,}$`,\n    ],\n    messages: [\"Only letters, numbers, and basic punctuation allowed\"],\n  },\n  lettersOnly: {\n    browserPattern: `^[${validationStringPatterns.letters}]+$`,\n    browserMessage: \"letters only\",\n    patterns: [\n      `^[${validationStringPatterns.letters}${validationStringPatterns.spaces}]{1,}$`,\n    ],\n    messages: [\"Only letters allowed\"],\n  },\n\n  lettersAndSpaces: {\n    browserPattern: `^[${validationStringPatterns.letters}${validationStringPatterns.spaces}]+$`,\n    browserMessage: \"letters and spaces only\",\n    patterns: [\n      `^[${validationStringPatterns.letters}${validationStringPatterns.spaces}]{1,}$`,\n    ],\n    messages: [\"Only letters and spaces allowed\"],\n  },\n\n  numbersOnly: {\n    browserPattern: `^[${validationStringPatterns.numbers}${validationStringPatterns.dotsAndCommas}]+$`,\n    browserMessage: \"numbers only\",\n    patterns: [\n      `^[${validationStringPatterns.numbers}${validationStringPatterns.dotsAndCommas}]{1,}$`,\n    ],\n    messages: [\"Only numbers allowed\"],\n  },\n\n  numbersAndSpaces: {\n    browserPattern: `^[${validationStringPatterns.numbers}${validationStringPatterns.dotsAndCommas}${validationStringPatterns.spaces}]+$`,\n    browserMessage: \"numbers and spaces only\",\n    patterns: [\n      `^[${validationStringPatterns.numbers}${validationStringPatterns.dotsAndCommas}${validationStringPatterns.spaces}]{1,}$`,\n    ],\n    messages: [\"Only numbers and spaces allowed\"],\n  },\n};\n\nexport type StringValidatorArgs = {\n  min?: number;\n  max?: number;\n  validationType:\n    | \"sentences\"\n    | \"lettersOnly\"\n    | \"lettersAndSpaces\"\n    | \"numbersOnly\"\n    | \"numbersAndSpaces\"\n    | \"phone\"\n    | \"email\"\n    | \"postalCode\"\n    | \"password\";\n  customValidation?: {\n    pattern: string;\n    message: string;\n  };\n};\n\ntype StringValidatorObj = {\n  browserPattern?: string;\n  browserMessage?: string;\n  patterns: string[];\n  messages: string[];\n};\n\n// Create a new string validation function that has chainable methods and\n// will accept an optional message for each validation methods\nexport function stringValidator({\n  min,\n  max,\n  validationType,\n  customValidation,\n}: StringValidatorArgs) {\n  let validationObject: StringValidatorObj = {\n    browserPattern: \"\",\n    browserMessage: \"\",\n    patterns: [],\n    messages: [],\n  };\n\n  min ? null : (min = 0);\n  max ? null : (max = 2000);\n\n  if (customValidation) {\n    return {\n      browserPattern: customValidation.pattern,\n      browserMessage: customValidation.message,\n      patterns: [customValidation.pattern],\n      messages: [customValidation.message],\n    };\n  }\n\n  // Note: we have to do an Object.assign here, we can't simply just\n  // assign validationObject[validationType] to validationObject because\n  // that attaches the the validationType object inside this function.\n  // Any changes that we make inside of this function will mutate the\n  // validation type outside of the object, causing unintended behavior\n  // when we try to reference it again inside of the next function.\n  //\n  // We need a clone with no references to the original object, that's\n  // what Object.assign gives \n  validationObject = Object.assign({}, validation[validationType]);\n\n  \n  if (\n    validationType === \"sentences\" ||\n    validationType === \"lettersOnly\" ||\n    validationType === \"lettersAndSpaces\" ||\n    validationType === \"numbersOnly\" ||\n    validationType === \"numbersAndSpaces\"\n  ) {\n    validationObject.browserPattern = validationObject.browserPattern.replace(\n      \"]+\",\n      `]{${min},${max}}`\n    );\n\n    let patternAlreadyPresent = validationObject.patterns.find(\n      (element) => element === `^.{${min},}$`\n    );\n    // console.log({patternAlreadyPresent});\n    if (!patternAlreadyPresent) {\n      validationObject.patterns = [\n        ...validationObject.patterns,\n        `^.{${min},}$`,\n        `^.{0,${max}}$`,\n      ];\n      validationObject.messages = [\n        ...validationObject.messages,\n        `Must be at least ${min} characters`,\n        `Must be no more than ${max} characters`,\n      ];\n    }\n  }\n  return validationObject;\n}\n"],
  "mappings": "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",
  "names": []
}
